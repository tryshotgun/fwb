# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: resources
# app and org for use with dashboard.serverless.com
# app: fwb-user 
org: merlotsteak

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'
variablesResolutionMode: 20210219

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  httpApi:
      cors:
        allowedOrigins:
          - https://api.spotify.com
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements: 
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"

functions:
  createNewUser:
    handler: handler.createNewUser
    layers:
      # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
      - {Ref: AxiosLambdaLayer}
    events:
      - httpApi: 'GET /users/create'
  getUserInfo:
    handler: handler.getUserInfo
    layers:
      # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
      - {Ref: AxiosLambdaLayer}
    events:
      - httpApi: 'GET /users/me'

# you can add CloudFormation resource templates here
resources:
  - ${file(resources/dynamo-user-table.yml)}
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
layers:
  axios:
    path: layer
